
// Using example 9 from textbook for position, velocity, acceleration of a car

/*
#include "Kalman.h"
// #include "eigen-3.4.0\\eigen-3.4.0\\Eigen\\Eigen"
#include <iostream>
using namespace std;


float t = 1; // time step
MatrixXf F(6, 6);
MatrixXf H(2, 6);
MatrixXf R(2, 2);
MatrixXf Qa(6, 6);

void main()
{
    F << 1, t, 0.5*pow(t, 2), 0, 0, 0,
        0, 1, t, 0, 0, 0,
        0, 0, 1, 0, 0, 0,
        0, 0, 0, 1, t, 0.5*pow(t, 2),
        0, 0, 0, 0, 1, t,
        0, 0, 0, 0, 0, 1;

    H << 1, 0, 0, 0, 0, 0,
        0, 0, 0, 1, 0, 0;

    R << 9, 0,
        0, 9;

    Qa << 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0,
        0, 0, 0.04, 0, 0, 0,
        0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0.04;

    double pos[2][35] = {{301.5, 298.23, 297.83, 300.42, 301.94, 299.5, 305.98, 301.25, 299.73, 299.2, 298.62, 301.84, 299.6, 295.3,
                          299.3, 301.95, 296.3, 295.11, 295.12, 289.9, 283.51, 276.42, 264.42, 250.25, 236.66, 217.47, 199.75, 179.7,
                          160, 140.92, 113.53, 93.68, 69.71, 45.93, 20.87},
                         {-401.46, -375.44, -346.15, -320.2, -300.8, -274.12, -253.45, -226.4, -200.65, -171.62, -152.11, -125.19,
                          -93.4, -74.79, -49.12, -28.73, 2.99, 25.65, 49.86, 72.87, 96.34, 120.4, 144.69, 168.06, 184.99, 205.11,
                          221.82, 238.3, 253.02, 267.19, 270.71, 285.86, 288.48, 292.9, 298.77}};



    VectorXf X0(6);
    X0 << 0, 0, 0, 0, 0, 0;

    MatrixXf P0(6,6);
    P0 << 500, 0, 0, 0, 0, 0,
        0, 500, 0, 0, 0, 0,
        0, 0, 500, 0, 0, 0,
        0, 0, 0, 500, 0, 0,
        0, 0, 0, 0, 500, 0,
        0, 0, 0, 0, 0, 500;

    VectorXf Z(2);

    Kalman K(6, 2);
    K.init(F, H, Qa, Z, R, X0, P0);
    for (int i = 0; i < 35; i++)
    {
        Z << pos[0][i], pos[1][i];
        K.update();
    }
    cout << K.getState() << endl;
    cout << K.getCov() << endl;
}
*/

// using CarTest class for example 13 in textbook of accelerating car measured by radar

#include "Unscented.h"
#include <iostream>

using namespace std;

void main()
{
    VectorXf X0(6);
    X0 << 400, 0, 0, -300, 0, 0;

    MatrixXf P0(6, 6);
    P0 << 500, 0, 0, 0, 0, 0,
        0, 500, 0, 0, 0, 0,
        0, 0, 500, 0, 0, 0,
        0, 0, 0, 500, 0, 0,
        0, 0, 0, 0, 500, 0,
        0, 0, 0, 0, 0, 500;

    VectorXf Z(2);

    MatrixXf R(2, 2);
    R << 25, 0,
        0, 0.00007569;

    MatrixXf F(6, 6);
    F << 1, 1, 0.5, 0, 0, 0,
        0, 1, 1, 0, 0, 0,
        0, 0, 1, 0, 0, 0,
        0, 0, 0, 1, 1, 0.5,
        0, 0, 0, 0, 1, 1,
        0, 0, 0, 0, 0, 1;

    MatrixXf Qa(6, 6);
    Qa << 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0,
        0, 0, 0.04, 0, 0, 0,
        0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0.04;

    double pos[2][35] = {{502.55, 477.34, 457.21, 442.94, 427.27, 406.05, 400.73, 377.32, 360.27, 345.93, 333.34, 328.07, 315.48,
                          301.41, 302.87, 304.25, 294.46, 294.29, 299.38, 299.37, 300.68, 304.1, 301.96, 300.3, 301.9, 298.7, 297.07,
                          295.29, 296.31, 300.62, 292.3, 298.11, 298.07, 298.92, 298.04},
                         {-0.9316, -0.8977, -0.8512, -0.8114, -0.7853, -0.7392, -0.7052, -0.6478, -0.59, -0.5183, -0.4698, -0.3952, -0.3026,
                          -0.2445, -0.1626, -0.0937, 0.0085, 0.0856, 0.1675, 0.2467, 0.329, 0.4149, 0.504, 0.5934, 0.667, 0.7537, 0.8354,
                          0.9195, 1.0039, 1.0923, 1.1546, 1.2564, 1.3274, 1.409, 1.5011}};

    KalmanU car(6, 2);
    car.init(X0, P0, Z, R, F, Qa);
    for (int i = 0; i < 35; i++)
    {
        Z << pos[0][i], pos[1][i];
        car.update();
    }
    cout << car.getState() << endl;
    cout << car.getCov() << endl;
    // cout << car.getNextCov() << endl;
    // cout << car.getNextState() << endl;
}